import streams, os, osproc, strutils, net

var
  user = "admin"
  pass = "admin"
  help = "sshTest -u user -p pass"
try:
  if paramCount() > 0:
    case paramStr(1):
      of "-u":
        user = paramStr(2)
      of "-U":
        user = paramStr(2)
      else:
        echo help
        quit(1)
    case paramStr(3):
      of "-p":
        pass = paramStr(4)
      of "-P":
        pass = paramStr(4)
      else:
        quit(1)
except IndexError:
  echo help
  quit(1)

proc getHost(): string =
  var
    log = "ssh_valid.log"
    stream = newFileStream(log, fmRead)
    data = readAll(stream)
  stream.close()
  return strip(data)

proc sshLogin(host: string) =
  var
    script = "sshLogin2.py"
    command = "$# -W ignore $# $# $# $#" % ["python2", script, host, user, pass]
    result = execProcess(command).strip()
  if result.contains("timed out"):
    echo "[!] Timed out..."
  elif result.contains("Authentication failed"):
    echo "[!] Authentication failed..."
  elif result.contains("Bad authentication"):
    echo "[!] Bad authentication..."
  elif result.contains("No handlers could be found"):
    discard
  elif result.contains("[Errno None] Unable to connect to port 22"):
    echo "[!] Unable to connect to port 22..."
  elif result.contains("Error reading SSH protocol banner"):
    echo "[!] Error reading SSH protocol banner..."
  elif result.contains("EOFError"):
    echo "[!] EOFError..."
  elif result.contains("Authentication timeout"):
    echo "[!] Authentication timeout..."
  elif result.contains("[Errno 101] Network is unreachable"):
    echo "[!] Network is unreachable..."
  elif result.contains("kex_exchange_identification: read: Connection reset by peer"):
    echo "[!] Connection reset by peer"
  else:
    echo "\n" & host
    echo result & "\n"

proc sshEnum(host: string) =
  var
    script = "sshEnum.py"
    command = "$# -W ignore $# $# $#" % ["python2", script, host, user]
    result = execProcess(command).strip()
  if result.contains("[+]"):
    echo "$#: $#" % [result, host]
    sshLogin(host)
  elif result.contains("[-]"):
    echo "$#: $#" % [result, host]
    sshLogin(host)
  elif result.contains("[*]"):
    echo "$#: $#" % [result, host]
  else:
    echo result

discard execShellCmd("clear")
echo "Testing User: $# Pass: $#" % [user, pass]
for i in getHost().splitLines:
  for x in i.split():
    if isIpAddress(x) == true:
      sshEnum(x)
    else:
      if isIpAddress(i) == true:
        sshEnum(i)
